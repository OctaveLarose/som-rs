# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: som-rs
default_data_file: 'rebench.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: https://rebench.stefan-marr.de/rebenchdb
        repo_url: https://github.com/Hirevo/som-rs
        record_all: true # make sure everything is recorded
        project_name: som-rs

runs:
    max_invocation_time: 60

benchmark_suites:
    macro:
        gauge_adapter: RebenchLog
        command: &MACRO_CMD "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/Richards core-lib/Examples/Benchmarks/DeltaBlue core-lib/Examples/Benchmarks/NBody core-lib/Examples/Benchmarks/Json core-lib/Examples/Benchmarks/GraphSearch -- BenchmarkHarness %(benchmark)s %(iterations)s "
        iterations: 1
        invocations: 5
        benchmarks:
            - Richards:     {extra_args: 1, machines: [yuria2]}
            - DeltaBlue:    {extra_args: 50, machines: [yuria3]}
            - NBody:        {extra_args: 1000, machines: [yuria3]}
            - JsonSmall:    {extra_args: 1, machines: [yuria ]}
            - GraphSearch:  {extra_args: 7, machines: [yuria2]}
            - PageRank:     {extra_args: 75, machines: [yuria3]}

    micro:
        gauge_adapter: RebenchLog
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/LanguageFeatures core-lib/Examples/Benchmarks/TestSuite . -- BenchmarkHarness %(benchmark)s %(iterations)s "
        iterations: 1
        invocations: 5
        benchmarks:
            - Fannkuch:     {extra_args: 7,     machines: [yuria ]}
            - Fibonacci:    {extra_args: 10,    machines: [yuria2]}
            - Dispatch:     {extra_args: 10,    machines: [yuria3]}
            - Bounce:       {extra_args: 10,    machines: [yuria ]}
            - Loop:         {extra_args: 100,   machines: [yuria2]}
            - Permute:      {extra_args: 10,    machines: [yuria3]}
            - Queens:       {extra_args: 10,    machines: [yuria ]}
            - List:         {extra_args: 2,     machines: [yuria2]}
            - Recurse:      {extra_args: 12,    machines: [yuria3]}
            - Storage:      {extra_args: 8,     machines: [yuria ]}
            - Sieve:        {extra_args: 20,    machines: [yuria2]}
            - BubbleSort:   {extra_args: 15,    machines: [yuria3]}
            - QuickSort:    {extra_args: 15,    machines: [yuria ]}
            - Sum:          {extra_args: 40,    machines: [yuria2]}
            - Towers:       {extra_args: 2,     machines: [yuria3]}
            - TreeSort:     {extra_args: 7,     machines: [yuria ]}
            - IntegerLoop:  {extra_args: 500,   machines: [yuria2]}
            - FieldLoop:    {extra_args: 1,     machines: [yuria3]}
            - WhileLoop:    {extra_args: 30,    machines: [yuria ]}
            - Mandelbrot:   {extra_args: 50,    machines: [yuria2]}

    interpreter:
        description: Basic interpreter benchmarks for comparing performance of most basic concepts.
        gauge_adapter: RebenchLog
        invocations: 5
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks/Interpreter core-lib/Examples/Benchmarks -- BenchmarkHarness %(benchmark)s %(iterations)s 1"
        benchmarks:
            - ArgRead:                           {machines: [yuria ]}
            - ArrayReadConst:                    {machines: [yuria2]}
            - ArrayWriteConstConst:              {machines: [yuria3]}
            - BlockSend0ConstReturn:             {machines: [yuria ]}
            - Const:                             {machines: [yuria2]}
            - FieldConstWrite:                   {machines: [yuria3]}
            - FieldRead:                         {machines: [yuria ]}
            - FieldReadIncWrite:                 {machines: [yuria2]}
            - FieldReadWrite:                    {machines: [yuria3]}
            - GlobalRead:                        {machines: [yuria ]}
            - LocalConstWrite:                   {machines: [yuria2]}
            - LocalRead:                         {machines: [yuria3]}
            - LocalReadIncWrite:                 {machines: [yuria ]}
            - LocalReadWrite:                    {machines: [yuria2]}
            - SelfSend0:                         {machines: [yuria3]}
            - SelfSend0BlockConstNonLocalReturn: {machines: [yuria ]}

executors:
    som-rs-ast:
        path: .
        executable: ./target/release/som-interpreter-ast
    som-rs-bc:
        path: .
        executable: ./target/release/som-interpreter-bc

# define the benchmarks to be executed for a re-executable benchmark run
experiments:
    som-rs:
        description: All benchmarks on som-rs
        suites:
            - micro
            - macro
            - interpreter
        executions:
#            - som-rs-ast
            - som-rs-bc
