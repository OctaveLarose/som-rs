stages:
  - build-test
  - benchmark
  - benchmark-completion

variables:
  CARGO_VERSION: stable

before_script:
  - (cd core-lib && git remote add smarr https://github.com/smarr/SOM.git && git fetch --all) || true
  - git submodule update --init

build-and-test-interpreters:
  stage: build-test
  tags: [yuria2]
  script:
    # Setup
    - cargo +$CARGO_VERSION clean
    - cargo +$CARGO_VERSION build --release

    # only one thread because otherwise it breaks by trying to initialize MMTk several times. though i should set a proper mutex or whatnot instead
    - RUST_TEST_THREADS=1 cargo test

    - cargo +$CARGO_VERSION run --bin som-interpreter-ast -- -c core-lib/Smalltalk core-lib/TestSuite -- TestHarness

    # Package and Upload
    - lz4 ./target/release/som-interpreter-ast som-interpreter-ast.lz4
    - lz4 ./target/release/som-interpreter-bc som-interpreter-bc.lz4

    - |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put som-interpreter-ast.lz4 incoming/${CI_PIPELINE_ID}/
        put som-interpreter-bc.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

benchmark:
  parallel:
    matrix:
      - MACHINE:
          - yuria
          - yuria2
          - yuria3
  stage: benchmark
  tags: [$MACHINE]
  script:
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-interpreter-ast.lz4
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/som-interpreter-bc.lz4

    - mkdir -p ./target/release
    - lz4 -d som-interpreter-ast.lz4 ./target/release/som-interpreter-ast
    - lz4 -d som-interpreter-bc.lz4 ./target/release/som-interpreter-bc

    - rebench --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf m:$MACHINE

report-completion:
  stage: benchmark-completion
  tags: [yuria2]
  script:
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion rebench.conf
